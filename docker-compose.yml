version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: nasa-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: nasaadmin
      MONGO_INITDB_ROOT_PASSWORD: spacebiology2025
      MONGO_INITDB_DATABASE: nasa_space_biology
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-init:/docker-entrypoint-initdb.d
    networks:
      - nasa-network

  # Node.js Backend Application
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nasa-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      MONGODB_URI: mongodb://nasaadmin:spacebiology2025@mongodb:27017/nasa_space_biology?authSource=admin
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key}
    ports:
      - "3000:3000"
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    depends_on:
      - mongodb
    networks:
      - nasa-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for Caching (optional)
  redis:
    image: redis:7.2-alpine
    container_name: nasa-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - nasa-network
    command: redis-server --appendonly yes

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: nasa-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - api
    networks:
      - nasa-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  nasa-network:
    driver: bridge
